// Importing necessary Three.js modules
import * as THREE from 'three';
import {OrbitControls} from 'three/examples/jsm/controls/OrbitControls.js';

// Creating the scene and setting its background color
const scene = new THREE.Scene();
scene.background = new THREE.Color('white');

// Creating the camera and adding it to the scene
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
camera.position.set(5, 5, 5);
scene.add(camera);

// Creating the renderer and setting its size
const renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

// Creating the controls
const controls = new OrbitControls(camera, renderer.domElement);

// Creating a group for the Rubik's Cube pieces
const rubiksGroup = new THREE.Group();
scene.add(rubiksGroup);

// Creating the Rubik's Cube pieces and adding them to the group
const cubeSize = 1;
const cubeSpacing = 0.1;
for (let x = 0; x < 3; x++) {
  for (let y = 0; y < 3; y++) {
    for (let z = 0; z < 3; z++) {
      const cubeGeometry = new THREE.BoxGeometry(cubeSize, cubeSize, cubeSize);
      const cubeMaterial = new THREE.MeshBasicMaterial({color: 0xffffff * Math.random()});
      const cube = new THREE.Mesh(cubeGeometry, cubeMaterial);
      cube.position.set(
        (x - 1) * (cubeSize + cubeSpacing),
        (y - 1) * (cubeSize + cubeSpacing),
        (z - 1) * (cubeSize + cubeSpacing),
      );
      rubiksGroup.add(cube);
    }
  }
}

// Animating the Rubik's Cube
let angle = 0;
function animate() {
  requestAnimationFrame(animate);
  angle += 0.01;
  rubiksGroup.rotation.setFromVector3(new THREE.Vector3(angle, angle, angle));
  renderer.render(scene, camera);
}
animate();
